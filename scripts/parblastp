#! /bin/csh 
# PARBLASTX  - to blast one query vs many small databases
# in parallell on the alliant.
# Modified from parblx by Erik Sonnhammer, 92-11-16
#
# arg1 = Database
# arg2 = Query Sequence
# the output and error log files are named after the testsequence

switch (`hostname`)
  case "al": 
    breaksw;
  default:
    echo 'parblx can only be run on the alliant';
    exit 1;
endsw

if ( $#argv != 2 ) then 
  echo "Usage: parblastp database query "; 
  exit 1;
endif

set database = $1;
set seqfile = $2;

#setenv BLASTDB /pubseq/pubseq/seqlibs/blast-db/
setenv BLASTDB /hgmp0/wormpub/BioSW/ncbi/dbal/par/
setenv BLASTPAM /pubseq/pubseq/outhouse/blast/bin/
set local_blast = /pubseq/pubseq/outhouse/blast_local

if (! -e $seqfile) then
  echo "Query file $seqfile does not exist"
  exit;
endif

echo "Query file: $seqfile   Database: $database"

echo "Blastp log for sequence $seqfile - database $database" >! parblastp.log
echo "Started at" `date` >> parblastp.log

foreach i ( 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 )

  set db = $BLASTDB$database$i;
  if (! -e $db.bsq ) then
    echo "Database file $db does not exist"
  else
    ( blastx $db $seqfile H=0 V=0 >! $2.blast$i ) >>&! $2.log$i &
  endif
end

echo "When all the blastx jobs have finished, cat them and run parblxclean"
echo "To check whether jobs are still running, type parbltest"
exit
