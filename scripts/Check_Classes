#!/usr/local/bin/perl5.6.1 -w                    # perl5.6.1 and -w flag

# Last updated by: $Author: ar2 $                     
# Last updated on: $Date: 2002-12-09 15:02:42 $     

use strict;                                     
use lib "/wormsrv2/scripts/";                  
use Wormbase;
use Getopt::Long;

##############
# variables  #
##############

$|=1;

my $maintainers = "All";
my $rundate     = `date +%y%m%d`; chomp $rundate;
my $name;

# touch logfile for run details
$0 =~ m/\/*([^\/]+)$/; system ("touch /wormsrv2/logs/history/$1.`date +%y%m%d`");
my $logfile = "/wormsrv2/logs/$1.`date +%y%m%d`.$$";

my ( $first, $second ,$debug ,$help);
GetOptions (
	    "debug:s"   => \$debug,
	    "help"      => \$help,
	    "first=s"    => \$first,
	    "second=s"   => \$second
           );

# help page
&usage("Help") if ($help);

# no debug name
print "DEBUG = \"$debug\"\n\n" if $debug;
&usage("Debug") if ((defined $debug) && ($debug eq ""));

# assign $maintainers if $debug set
($maintainers = $debug . '\@sanger.ac.uk') if ($debug);

# open logfile
system ("/bin/touch $logfile");
open (LOG,">>$logfile") or die ("Could not create logfile\n");


#this script doesn't write to a file so has no test option.
	   
# make sure two databases have been entered
if ((!$first)||(!$second)) {
  print "$0 dumps a comparison of all the classes content between two acedb databases\n\n";
  print "Usage: $0 -f first_database_path -s second_database_path\n\n";
  exit;
} else {
  print "First Database : $first\n";
  print "Second Database : $second\n\n";
  print LOG "$1 start at", &runtime, " using $first and $second\n\n";
}

my $tace = &tace;
my $exec_f = "$tace $first";
my $exec_s = "$tace $second";

format STDOUT_TOP =
                 Classes Content Comparison

Class Name           First Db     Second Db    Second - First   
-------------------------------------------------------------
.


my( $class, $f_found, $s_found, $diff);
my @TotalClasses;
format STDOUT =
@<<<<<<<<<<<<<<<<<<<<@<<<<<<<<<<<<@<<<<<<<<<<<<@<<<<<<<<<<<<
$class,              $f_found,    $s_found,    $diff
.          

# The complete set of classes to dump is between the DATA and END tokens
READARRAY: while (<DATA>) {
    chomp $_;
    last READARRAY if $_ =~ /END/;
    push (@TotalClasses,$_);
}

foreach (@TotalClasses) {
    $class=$_;
    my $command=<<EOF;
query find $class
quit
EOF
    open (FIRSTACE, "echo '$command' | $exec_f  | ");
    while (<FIRSTACE>) {
	if ($_ =~ /Found\s+(\d+)\s+objects/){
            $f_found=$1;
	    chomp $f_found;
	}
    }
    close FIRSTACE;
    open (SECONDACE, "echo '$command' | $exec_s  | ");
    while (<SECONDACE>) {
	if ($_ =~ /Found\s+(\d+)\s+objects/){
            $s_found=$1;
	}
    }
    close SECONDACE;
    $diff = $s_found - $f_found;
    $diff.="\n";
    write;
}

&mail_maintainer("Check_classes",$maintainers,$logfile);

print LOG "finished at ", &runtime, "\n";
close LOG;

exit;


sub usage {
     my $error = shift;

     if ($error eq "Help") {
         # Normal help menu
         system ('perldoc',$0);
         exit (0);
     }
     elsif ($error eq "Debug") {
         # No debug bod named
         print "You haven't supplied your name\nI won't run in debug mode
         until i know who you are\n";
        exit (0);
    }
}

__DATA__
2_point_data
Accession_number
Allele
Author
Balancer
Cell
Cell_group
Class
Clone
Comment
Contig
Database
Display
EMBL_dump_info
EMBL_info
Enzyme
Expr_Pattern
Gene_Class
Jade
Journal
Keyword
Laboratory
Life_stage
Locus
ManyMap
Map
Metabolite
Method
Motif
MultiMap
Multi_counts
Multi_pt_data
Neurodata
Paper
Pathway
PathwayDiagram
Picture
Pos_neg_data
Protein
ReactantInfo
Rearrangement
Reference
RegulatorInfo
Repeat_Info
Sequence
Session
Species
Strain
Table
Table_definition
Tag
Text
Tree
TreeNode
Url
UserSession
View
View_tags
WWW_server
__END__


=pod


=head2 NAME Check_Classes

=over 4
 
This script compares the two passed databases on a class by class basis.

Used by make_autoace

=item Check_Classes [ -test, -debug, -help, -first, -second ]
  
=back

B<-first> compulsory

First database to be compared  

B<-second> compulsory

Second database to be compared

example usage:

=item Check_Classes -first /wormsrv2/autoace -second /wormsrv2/current_DB
