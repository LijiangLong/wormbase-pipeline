#!/usr/local/bin/perl5.6.0 -w
#
# patch_wormpep
# v 0.2
# dl
#
# Usage : patch_wormpep [-options]
#
#
# v0.1
# 010219 : dl  : PP version
# 010418 : dl  : Added error and usage subroutines

# v0.2
# 010418 : dl  : Changed fasta database lookup to use &dbfetch
# 010725 : dl  : Fixed printing bug

#################################################################################
# variables                                                                     #
#################################################################################

$|=1;
use IO::Handle;
use Getopt::Std;
use Cwd;
use lib '/wormsrv2/scripts';
use Wormbase;
use Ace;

 ##############################
 # command-line options       #
 ##############################

$opt_h = "";      # Help/Usage page
$opt_r = "";      # wormpep release number

getopts ('hr:');
&usage if ($opt_h);

$release = $opt_r; 

 ##############################
 # Script variables (run)     #
 ##############################

my $maintainer = "dl1\@sanger.ac.uk";
my $rundate = `date +%y%m%d`; chomp $rundate;
my $runtime = `date +%H:%M:%S`; chomp $runtime;
my $log="/wormsrv2/logs/patch_wormpep${release}.${rundate}.$$";
my $db = Ace->connect(-path  =>  '/wormsrv2/pepace') || die "Couldn't connect to pepace\n", Ace->error;
my $dbfile = "/wormsrv2/WORMPEP/wormpep${release}/wp.fasta${release}";

 ###############################
 # Main Loop                   #
 ###############################

open (LOG,  ">/wormsrv2/WORMPEP/wormpep${release}/Analysis_to_do.$rundate");
open (DIFF, "</wormsrv2/WORMPEP/wormpep${release}/wormpep.diff${release}");
while (<DIFF>) {    
    if (/changed:\t(\S+)\s+(\S+) --> (\S+)/) {
	&changed($1,$2,$3);
    }
    if (/lost:\t(\S+)\s+(\S+)/) {
	&lost($1,$2);
    }
    if (/new:\t(\S+)\s+(\S+)/) {
	&new($1,$2);
    }
    if (/reappeared:\t(\S+)\s+(\S+)/) {
	&reappeared($1,$2);
    }
}
close DIFF;
close LOG;

 ###############################
 # hasta luego                 #
 ###############################

exit(0);

###################################################
# Subroutine for changed entries                  #   
###################################################

sub changed {
    
    my($CDS,$old_acc,$new_acc)= @_;

    my $sequence = $db->fetch(Protein => "WP:$old_acc");
    my @list = $sequence->Corresponding_DNA;
    my $length = scalar(@list);
    my $seq = "";

    # Delete tags from old entry
    print "Protein : \"WP:$old_acc\"\n";
    print "-D Corresponding_DNA $CDS\n";
    print "-D Live\n" unless ($length > 1); # don't add this tag if there are 2 or more CDS
    print "\n";

    # Add tags to old entry
    print "Protein : \"WP:$old_acc\"\n";
    print "DB_Remark \"[wormpep${release}] Altered GeneModel, new accession is $new_acc\n";
    print "Replaced_by WP:$new_acc\n"unless ($length > 1); # don't add this tag if there are 2 or more CDS
    print "Wormpep\n"; # shouldn't need to add this line but I don't trust the deletion of the Live tag
    print "\n";

    # Add new entry
    print "Protein : \"WP:$new_acc\"\n";
    print "Database WORMPEP $CDS $new_acc\n";
    print "Corresponding_DNA $CDS\n";
    print "Species \"Caenorhabditis elegans\"\n";
    print "Wormpep\n";
    print "Live\n";
    print "Replaces WP:$old_acc\n";
    print "DB_Remark \"[wormpep${release}] Altered GeneModel, old accession was $old_acc\n";
    print "\n";

    print "Peptide : WP:";
    $seq = &dbfetch($new_acc,$dbfile);
    print "$seq\n\n";
    
    # write fasta file to update log
    print LOG ">WP:";
    print LOG "$seq\n";
}

###################################################
# Subroutine for lost entries                     #   
###################################################

sub lost {
    my($CDS,$old_acc)= @_;

    # Delete tags from old entry
    print "Protein : \"WP:$old_acc\"\n";
    print "-D Corresponding_DNA $CDS\n";
    print "-D Live\n";
    print "\n";
    
    # Add tags to old entry
    print "Protein : \"WP:$old_acc\"\n";
    print "DB_Remark \"[wormpep${release}] Deleted GeneModel\n";
    print "Wormpep\n";
    print "\n";

}

###################################################
# Subroutine for new entries                      #   
###################################################

sub new {
    my($CDS,$new_acc)= @_;
    my $seq = "";

    # Add new entry
    print "Protein : \"WP:$new_acc\"\n";
    print "Database WORMPEP $CDS $new_acc\n";
    print "Corresponding_DNA $CDS\n";
    print "Species \"Caenorhabditis elegans\"\n";
    print "Wormpep\n";
    print "Live\n";
    print "DB_Remark \"[wormpep${release}] New GeneModel\n";
    print "\n";
    
    print "Peptide : WP:";
    $seq = &dbfetch($new_acc,$dbfile);
    print "$seq\n\n";

    # write fasta file to update log
    print LOG ">WP:";
    print LOG "$seq\n";
}


###################################################
# Subroutine for reappeared entries               #   
###################################################

sub reappeared {
    my($CDS,$new_acc)= @_;
    my $seq = "";

    # Add new entry
    print "Protein : \"WP:$new_acc\"\n";
    print "Database WORMPEP $CDS $new_acc\n";
    print "Corresponding_DNA $CDS\n";
    print "Species \"Caenorhabditis elegans\"\n";
    print "Wormpep\n";
    print "Live\n";
    print "DB_Remark \"[wormpep${release}] Reappeared GeneModel\n";
    print "\n";
    
    print "Peptide : WP:";
    $seq = &dbfetch($new_acc,$dbfile);
    print "$seq\n\n";

#    print LOG "Full analysis: $new_acc\n"; 
}





###################################################
# Errors and pod documentation                    #
###################################################

sub error {
    my $error = shift;
    # Error 1 - no release number (opt_r)
    if ($error == 1) {
        print "No wormpep release number supplied\n\n";
        $runtime = `date +%H:%M:%S`; chomp $runtime;
        print LOGFILE "No wormpep release number supplied.\n";
        print LOGFILE "Exiting early at $rundate $runtime\n";
        close LOGFILE;
        &mail_maintainer("WormBase Report: patch_wormpep",$maintainer,$log);
    }
    exit(1);
}

sub usage {
    system ('perldoc',$0);
    exit;
}


__END__

=pod

=head1 NAME - patch_wormpep

=head2 USAGE

patch_wormpep takes the current wormpep release and compares
it with the previous release to make a patch file for an
ACEDB tracking database. It relies on the wormpep.diff file
for the changes. The resulting .ace file can be uploaded into
pepace prior to dumping classes for the main autoace build.


patch_wormpep arguments:

=over 4

=item *

-r Wormpep release number (e.g. 48)

=back

=cut
