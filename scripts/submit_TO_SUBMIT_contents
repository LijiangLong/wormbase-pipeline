#!/software/bin/perl -w
#
# submit_TO_SUBMIT_contents
# Steven Jones, 1995, Sanger Centre.
#
# This script will mail the contents of ~wormpub/analysis/TO_SUBMIT
# to celegans@ebi.ac.uk.
#
# Last updated by: $Author: pad $                      
# Last updated on: $Date: 2009-11-24 12:21:12 $        

$|=1;
use strict;
use Getopt::Long;
use lib $ENV{'CVS_DIR'};
use Wormbase;
use Log_files;
use Storable;
use Net::FTP;
my $submitdir = glob("~wormpub/analysis/TO_SUBMIT");
print "$submitdir\n\n";
my (@filenames);

 ##############################
 # Variables                  #
 ##############################

my $rundate     = `date +%y%m%d`; chomp $rundate;
my $name;

# touch logfile for run details
my $logfile = "$submitdir/submitted_to_EMBL";
	   
###################################################
# command-line options                            #
###################################################

my $help;       # Help perdoc
my $debug;      # Debug mode, verbose output to dl1 only
my $email;
my $login;
my $test;
my $verbose; # this option actually sends a copy of every record to the person specified by $debug.

GetOptions (
            "debug=s"   => \$debug,
            "help"      => \$help,
	    "email"     => \$email, # use the outdated email method to submit updates.
	    "login:s"   => \$login, #supply the ebi ftp user id you whish to use.
	    "test"      => \$test,
	    "verbose"   => \$verbose,
	   );

my $wormbase = Wormbase->new(
    -test    => $test,
    -debug   => $debug,
);

# establish log file.
my $log = Log_files->make_build_log($wormbase);

# help page	   
&usage("Help") if ($help);

# assign $maintainers if $debug set
my $maintainers;
if ($debug) {
  $maintainers = $debug . "\@sanger.ac.uk";
}
else {
$maintainers = "pad\@sanger.ac.uk";
}

# Inform user of the pipeline that is selected.
if (!defined ($email)) {$log->write_to("\nYou are submitting to EMBL via the new ftp pipeline\n\n");}
if (defined ($email)) {$log->write_to("\nYou are submitting to EMBL email, beware of errors!\n\n");}

###################################################
# logfile                                         #
###################################################
# open logfile
system ("/bin/touch $logfile");
open (LOG,">>$logfile") or die ("Could not create logfile\n");

##########################################################
# Supply the ftp password - didn't wasnt to hard code it.#
#########################################################
my $password;

if ($login) {
  print "\nPlease supply the celegans ftp password:";
  $password = <STDIN>;
}

# else parse the account details from secure file
else {
  open (IN, $wormbase->wormpub."/EBIFTP.s") or die("Can't open secure account details file ~/wormpub/EBIFTP.s\n");
  while (<IN>){
    if (/^USER_ID:(\S+)$/) {$login = $1;}
    if (/^PASSWD:(\S+)$/) {$password = $1;}
    else {next}
  }
  close IN;
}

###################################################
# Establish ftp connection                        #
###################################################
my $ftp;
if (!defined $email) {
  $ftp = Net::FTP->new("ftp.ebi.ac.uk", Debug => 0) or die "Cannot connect to ftp.ebi.ac.uk: $@";
  $ftp->login("$login","$password\@") or $log->log_and_die ("Cannot login to ftp.ebi.ac.uk using celegans credentials\n". $ftp->message);
  $ftp->cwd("/TXhExzF7KgVBMHtJXDct/to_ena") or $log->log_and_die ("Cannot change into to_ena dir for upload of files\n". $ftp->message);
}

###################################################
# read TO_SUBMIT directory                        #
###################################################
opendir(DIR,"$submitdir");
@filenames=grep(/\.embl$/,readdir(DIR));
close DIR;

# report number of .embl files in directory
print scalar(@filenames) . " clones found in $submitdir\n";
$log->write_to(scalar(@filenames) . " clones found in $submitdir\n");

# exit if no valid .embl files are found
if (scalar(@filenames) == 0) {
$log->write_to("No work to be done. :)\n");
$log->mail;
exit(0);
}

# confirm you want to do this
$log->write_to("\nAll of these will be submitted to EMBL (celegans\@ebi.ac.uk or ftp.ebi.ac.uk)\n\n");
$log->write_to("-debug has also been selected so you \"$debug\", will get a summary :)\n\n") if $debug;
$log->write_to("-verbose specified so you  \"$debug\", will get a complete submission :)\n\n") if $verbose;
print "Do you wish to proceed???(y or n)\n\n";

my $answer=<STDIN>;
if ($answer ne "y\n") {die "\nSubmission aborted\n";}

if (-e "$submitdir/submitted_to_EMBL") {
print "!!Warning $submitdir/submitted_to_EMBL exists so may contain names from the previous submission!!\n\n";
$log->write_to("!!Warning $submitdir/submitted_to_EMBL exists so may contain names from the previous submission!!\n\n");
}
# touch the log file if it does not exist.
unless (-e "$submitdir/submitted_to_EMBL") {
  system ("touch $submitdir/submitted_to_EMBL");
}

# Submit files to EBI and append clone name to log file
&submit_sub if (!defined $email);

$log->write_to("Duncan has been sent a summary of clones submitted.\n");
system ("/usr/bin/mail duncan.legge\@ebi.ac.uk --subject=WormBase_EMBL_submission_summary < $submitdir/submitted_to_EMBL");
system ("/usr/bin/mail $maintainers --subject=WormBase_EMBL_submission_summary < $submitdir/submitted_to_EMBL") if ($debug);
$ftp->quit if (!defined $email);
$log->mail;
exit(0);


###################################
# SUBROUTINES                     #
###################################

sub submit_sub {
  open (LOG, ">>$submitdir/submitted_to_EMBL");
  open (LIST, "ls  $submitdir |");
  while (<LIST>) {
    chop;
    #if they match *embl
    if (/embl$/) { 
      print "Submitting $submitdir/$_\n" if $debug;
      $log->write_to("Submitting $submitdir/$_\n");
      (/^(\S+)\.\S+\.\S+/);
      print LOG "$_\n";
      #send the clones on their way.
      #FTP them
      $ftp->put("$submitdir/$_") or $log->log_and_die ("put failed for $submitdir/$_\n". $ftp->message) if (!defined $email);
      $log->write_to("\nFile: $_ added to $login ebi ftp account\n") if (!defined $email);
      # Email them if $email is defined
      system ("/usr/bin/mail celegans\@ebi.ac.uk < $submitdir/$_") if (defined $email);
      #send them to the debug specified email.
      system ("/usr/bin/mail $maintainers --subject=CLONE_SUBMISSION_${_} < $submitdir/$_") if (($debug) && ($verbose));
      #zip them
      system ("/bin/gzip $submitdir/$_");
    }
  }
  close LIST;
  close LOG;
}

sub usage {
    my $error = shift;

    if ($error eq "Help") {
        # Normal help menu
        system ('perldoc',$0);
        exit (0);
    }
}

__END__

=pod

=head1 NAME - submit_TO_SUBMIT_contents

=head1 USAGE:

=over 4

=item submit_TO_SUBMIT_contents [-options]

=item 

=item submit_TO_SUBMIT_contents will submit EMBL files to the EBI via ftp (default) or email.

=item The submitted .embl files are then gzipped to prevent subsequent

=item resubmission. All submission clone names are written to a log file.

=item The summary log file is also sent to duncan.legge@ebi.ac.uk

=back

=head2 submit_TO_SUBMIT_contents mandatory arguments:

=over 4

=item none

=head2 submit_TO_SUBMIT_contents optional arguments:

=over 4

=item -login gives you the option to login as a different user eg.
      cbriggsae. This option also triggers a command line password request.

=item -h, Help page

=item -debug, gives additional output messages as well as an email summary to the specified user.

=item -verbose, will (in conjunction with -debug) submit a copy of all entries to the -debug maintainer.

=back

=head1 RUN REQUIREMENTS:

=back

submit_TO_SUBMIT has no requirements. If the submit directory contains
no .embl files then no action is taken.

=head1 RUN OUTPUT:

 Log file ~wormpub/analysis/TO_SUBMIT/submitted_to_EMBL is a single column
 text file containing the clone name of all EMBL entries submitted. This 
 file is appended and hence may contain old submissions as well as the
 current run.

=head1 EXAMPLES:

=over 4

=item submit_TO_SUBMIT_contents -debug pad

=back

 Submits all files with the .embl suffix in the ~wormpub/analysis/TO_SUBMIT
 directory. The clone name for each file submitted is appended to the file
 submitted_to_EMBL, the above option will also email the submission summary 
 to the debug user i.e. pad.

=head1 AUTHOR - Daniel Lawson (modifications from the original of Steve Jones)

Email dl1@sanger.ac.uk

=cut
