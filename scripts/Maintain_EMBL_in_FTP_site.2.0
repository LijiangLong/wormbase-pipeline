#!/usr/local/bin/perl

#This program will write the embl files of 
#all sanger and st. louis cosmids currently 
#fetchable from EMBL into the ftp dir.
#and also sorts into chromosomal directories as well
#Steven Jones 

require glob('~sjj/scripts/sanger.pl');
&tilda(ftp);

foreach $cosmid (&finallcosmids) {


    #open(sequence,"getz -t -d -sf EMBL  \"([emnew-id:CE$cosmid]) \| (([embl-id:CE$cosmid]) \! ([embl-id:CE$cosmid] < emnew))\" |");
    open(sequence,"getz5 -e  \"([EMBLNEW-id:CE$cosmid]) \| (([EMBL-id:CE$cosmid]) \! ([EMBL-id:CE$cosmid] < EMBLNEW))\" |");

#    open(output, ">$tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/UNSORTED/$cosmid.embl");
    open(output, ">$tilda/pub3/databases/C.elegans_sequences/TEST/$cosmid.embl");
    
    while (<sequence>) {print output $_;}
    
    close output;
    close sequence;

    #if the output file is of zero length then remove it
    if (-z "$tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/UNSORTED/$cosmid.embl") {
	unlink "$tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/UNSORTED/$cosmid.embl";
    }

}

exit;

#sort the cosmids into the chromosomal directories as well

opendir(EMBL, "$tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/UNSORTED");
@emblfiles = grep (/\.embl$/, readdir(EMBL));
closedir(EMBL);
 
foreach $cosmid (@emblfiles) {
$cosmid=~s/\.embl//;
$chromosome=&celechrom($cosmid);
if ($chromosome eq "0") {print STDERR "Position for cosmid $cosmid not found\n";}
        else 
          {print "EMBL:$cosmid $chromosome\n";
           system ("\\cp $tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/UNSORTED/$cosmid.embl $tilda/pub/databases/C.elegans_sequences/EMBL_FORMAT/$chromosome/");
                } 

}





sub finallcosmids2 {

        local($exec);
        local($command);
	local(@array);
	undef @array;
	$exec=&tace;
	$ENV{'ACEDB'}="/nfs/disk100/wormpub/acedb/ace4/cgc";     
	$command=<<EOF;
	find genome_sequence
	where DNA  AND species="Caenorhabditis elegans"
	list -f -
	quit
EOF
open(textace, "echo '$command' | $exec  | ");
while (<textace>) {
  if (/^Sequence\s+:\s+\"(\w+)\"/)  {if ($1 ne "?Sequence" &&  $1!~/YAC_*/) {push (@array, $1)}}
	 	 }
	close textace;     
	return @array;
        }
