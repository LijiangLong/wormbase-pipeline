#!/usr/local/bin/perl
#
# dbclass
# v 1.0
# dl
#
# Usage : dbclass [-options]
#
# Counts the number of objects in an ACEDB database for each Class stated in the config file

# v1.0
# 001219 : dl  : PP version

$|=1;
use IO::Handle;
use Getopt::Std;
require "/nfs/disk100/wormpub/analysis/scripts/babel.pl";

 ##############################
 # Script variables (run)     #
 ##############################

my $maintainer = "dl1\@sanger.ac.uk";
my $rundate = `date +%y%m%d`; chomp $rundate;
my $runtime = `date +%H:%M:%S`; chomp $runtime;
my $version = &get_script_version(dbcomp);

##################################################
# Connect with acedb database                    #
##################################################

 ##############################
 # command-line options       #
 ##############################

$opt_d="";   # Database path
$opt_h="";   # Help/Usage page

getopts ('hf:s:');
&usage(0) if ($opt_h);
&usage(1) if ($opt_f);

 ##############################
 # Paths etc                  #
 ##############################

my $db  = $opt_f;
my $oblist = 1;
$exec=&tace;

#################################################################################
# Get the WS version number and set the wormpep release number                  #
#################################################################################

my $dbname = "XXX";

 ########################################
 # Open logfile                         #
 ########################################

my $logfile = "/wormsrv2/logs/dbclass.$rundate.$$";
my $outfile = "/wormsrv2/autoace/COMPARE/dbclass.dbcount";

system ("/bin/touch $logfile");
open (LOG,">>$logfile") or die ("Could not create logfile\n");
LOG->autoflush();

print LOG "# dbclass\n#\n";     
print LOG "# version        : $version\n";
print LOG "# run details    : $rundate $runtime\n";
print LOG "\n";
print LOG "Current db       : $dbname '$db'\n";
print LOG "\n\n";

##################################################
# Main Loop                                      #
##################################################

open (OUT, ">$outfile");
open (ERR, ">$errfile");

print OUT  " +------------------------------------------+\n";
print OUT  " | Class              |    ACEDB database   |\n";
print OUT  " |                    +----------+----------+--------+\n";
printf OUT " |                    | %8s | change |\n", $dbname_1,$dbname_2;
print OUT  " +--------------------+----------+----------+--------+\n";

# The complete set of classes to dump is between the DATA and END tokens

 READARRAY:   while (<DATA>) {
     chomp $_;
     last READARRAY if $_ =~ /END/;
     push (@TotalClasses,$_);
}

$classnum = scalar @TotalClasses;

foreach $query (@TotalClasses) {
    $|=1;
    next if ($query eq "");
    &mk_command;
    
    printf OUT " | %18s |", $query;
    print LOG  " Counting '$query'\n";
    
 ##################################################
 # DB - current version                           #
 ##################################################

    $ENV{'ACEDB'}="$db";
    $out = "/tmp/dbclass_${oblist}";
    &count($out);
    $count_2 = $active;

    printf OUT "%9s",$active;

    print LOG " Counting $dbname : $active\n\n";
    
    my $diff = $count_2 - $count_1;
    if ($diff != 0) {
	printf OUT "| %6s |\n",$diff;
	&diff($oblist);
    }
    else {
	print OUT "|      0 |\n";
    }
    $oblist++;
}

print OUT " +--------------------+----------+----------+--------+\n";

close OUT;
close ERR;
close LOG;

 ##############################
 # tidy up class count files  #
 ##############################

system ("rm -f /tmp/dbclass*");

 ##############################
 # mail $maintainer report    #
 ##############################

open (mailLOG, "|/usr/bin/mailx -s \"WormBase Report: dbclass\" $maintainer ");
open (readLOG, "<$logfile");
while (<readLOG>) {
    print mailLOG $_;
}
close readLOG;
close mailLOG;

 ##############################
 # hasta luego                #
 ##############################

exit (0);

#################################################################################
### Subroutines                                                               ###
#################################################################################


sub diff {
    my ($oblist) = @_;
    system ("cat /tmp/dbclass_${oblist} | sort > /tmp/look");
    open (COMM, "comm -3 /tmp/look /tmp/look |");
    while (<COMM>) {
	print ERR " <- $dbname $1\n" if (/^(\S+.+)/);
    }
    close (COMM);
    system ("rm -f /tmp/look");
}

sub count {
    my ($out) = @_;
    open (COUNT, ">$out");
    open (textace, "echo '$command' | $exec  | ");
    while (<textace>) {
	($found = $1)  if (/^\/\/ Found (\d+) objects/);
	($active = $1) if (/^\/\/ (\d+) Active Objects/);
	(print COUNT "$_") if (/\:/);
    }
    close (textace);
    close COUNT;
    return ($active);
}

sub mk_command {
$command=<<EOF;
query find $query 
list -a 
quit
EOF
}


#######################################################################
# Help and error trap outputs                                         #
#######################################################################
 
sub run_details {
    print "# dbclass\n#\n";     
    print "# version        : $version\n";
    print "# run details    : $rundate $runtime\n";
    print "\n";
    print "Current db       : $dbname '$db'\n";
    print "\n\n";
}

sub usage {
    my $error = shift;
    
    if ($error == 1) {
	# No -f database to compare 
	print "\nNo database to compare to autoace\n\n";
	print "Usage: dbcomp [-options]\n";
	print " -f : first_database_path\n";
	print " -h : help\n\n";
	exit(0);
    }
    elsif($error == 2) {
	# No WormBase release number file
	print "\nThe WormBase release number cannot be parsed\n";
	print "Check File: '$Wormbase_release_file'\n\n";
	&run_details;
	exit(0);
    }
    elsif ($error == 0) {
	# Normal help menu
	exec ('perldoc',$0);
	exit (0);
    }
}

__DATA__
2_point_data
Accession_number
Allele
Author
Cell
Cell_group
Class
Clone
Comment
Contig
Database
Display
Expr_Pattern
Gene_Class
Journal
Keyword
Laboratory
Life_stage
Locus
Map
Method
Motif
Multi_pt_data
Neurodata
Paper
Picture
Pos_neg_data
Protein
Rearrangement
Reference
RegulatorInfo
Repeat_Info
Sequence
Session
Species
Strain
Table
Table_definition
Tag
Url
__END__


=pod

=head2   NAME - dbcomp

=head1 USAGE

=over 4

=item dbcomp [-options]

=back

=cut
