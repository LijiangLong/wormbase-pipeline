#!usr/local/bin/perl -w
#
# wrapper to call introncheck, estcheck and overlapcheck on gff files after database rebuilt
#
# by Kerstin Jekosch
# 13/07/01

use strict;
use Getopt::Std;
$|=1;
require "/wormsrv2/scripts/babel.pl";

###########
# options #
###########

my $opt_a="";   # does all the following
my $opt_o="";   # performs overlapcheck
my $opt_e="";   # performss estcheck 
my $opt_i="";   # performs introncheck
my $opt_h="";   # Help/Usage page

getopts ('aoeih');
&usage(0) if ($opt_h);
if ($opt_a) { $opt_e = 1; $opt_i = 1; $opt_o = 1; }

#################
# set variables #
#################

my $maintainers = "dl1\@sanger.ac.uk kj2\@sanger.ac.uk";
my $rundate = `date +%y%m%d`; chomp $rundate;
my $runtime = `date +%H:%M:%S`; chomp $runtime;

my $WS_version; 
open (WormBase_release, "/wormsrv2/autoace_config/WormBase_release_version");
while (<WormBase_release>) {
    chomp;
    $WS_version = substr ($_,2);
}
close (WormBase_release);

#################
# open LOG file #
#################

my $logfile = "/wormsrv2/logs/gffcheck.WS${WS_version}.${rundate}.$$";
open (LOG,">$logfile");
LOG->autoflush();

print LOG "# gffcheck\n\n";     
print LOG "# run details    : $rundate $runtime\n";
print LOG "\n";
print LOG "WormBase version : WS${WS_version}\n";

print LOG "======================================================================\n";
print LOG "  -a : executes all of the following -eio\n" if ($opt_a);
print LOG "  -e : executes estcheck\n"                  if ($opt_e);
print LOG "  -i : executes introncheck\n"               if ($opt_i);
print LOG "  -o : executes overlapcheck\n"              if ($opt_o);
print LOG "======================================================================\n";
print LOG "\n";

#########################
# tiny little main loop #
#########################

&runestcheck     if ($opt_e);
&runintroncheck  if ($opt_i);
&runoverlapcheck if ($opt_o);

##############################
# mail $maintainer report    #
##############################

close LOG;

open (mailLOG, "|/usr/bin/mailx -s \"gffcheck Report: gffcheck\" $maintainers ");
open (readLOG, "<$logfile");
while (<readLOG>) {
    print mailLOG $_;
}
close readLOG;
close mailLOG;

exit(0);

###############
# subroutines #
###############

sub runestcheck {
    system ("/wormsrv2/scripts/estcheck") && die "Cannot execute estcheck $!\n";
    print LOG " Run estcheck\n";
}

sub runintroncheck {
    system ("/wormsrv2/scripts/introncheck")  && die "Cannot execute introncheck $!\n";
    print LOG " Run introncheck\n";
}

sub runoverlapcheck {
    system ("/wormsrv2/scripts/overlapcheck") && die "Cannot execute overlapcheck $!\n";
    print LOG " Run overlapcheck\n";
}
 
sub usage {
    my $error = shift;
    if ($error == 0) {
	# normal help menu
	exec ('perldoc',$0);
	exit (0);
    }
}
__END__

=pod

=head2   NAME - gffcheck

=head1 USAGE

=over 4

=item gffcheck [-options]

=back

gffcheck is a wrapper to drive scripts to check the gff files for confirmed introns (introncheck), 
inconsistencies in EST assignments (estcheck), overlapping genes, ESTs matching introns and repeats 
within genes (overlapcheck).

gffcheck mandatory arguments:

=over 4

=item none, (but it won't do anything)

=back

gffcheck OPTIONAL arguments:

=over 4

=item -a, executes all of the following -eio

=item -e, executes estcheck

=item -i, executes introncheck 

=item -o, execute overlapcheck

=back

=cut
