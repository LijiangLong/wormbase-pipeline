#!/usr/local/bin/perl -w
#
# make_FTP_wormbase
# v 0.2
#
# dl
#
# Usage : make_FTP_wormbase [-options]
# A PERL wrapper to automate the process of building the wormbase FTP site.
#
# This script does :
#
# [01] - make a new directory for the WS release
# [02] - make the tar file for the chromosomes
# [03] - copy the WS release files to the target directory
# [04] - copy the models.wrm file to the target directory
# [05] - tar and move the wormpep release to the target directory
# [06] - delete the old symbolic link and make the new one
# [07] - delete the old WS release version directory
# [08] - exit gracefully
#

# v0.2   
# 001113 : dl  : Changed name of logfile to include WS release number
# 001101 : dl  : Uses look-up call to assign WormBase release number and calculate wormpep release

# v0.1 
# 001004 : ag3 : corrected path for symbolic link; added check for copying over of distr. files
# 000927 : dl  : Added creation of flag file so that Tony picks up new version for the AceBrowser
# 000926 : dl  : PP version

#################################################################################
# variables                                                                     #
#################################################################################

$|=1;
use Getopt::Long;
use IO::Handle;
use lib '/wormsrv2/scripts';
use Wormbase;

my $sourcedir         = "";  # [Text] Directory in which the latest WS release resides
my $targetdir         = "";  # [Text] Directory in which to build the new release
my $WS_release        = "";  # [Text] Release number (look-up from file)
my $WP_release        = "";  # [Int]  wormpep release number  (look-up from file)
my $debug             = "";  #        on/off flag for verbose mode
my $clean             = "";  #        on/off flag for removing old WS directories from the FTP site

 ##############################
 # Script variables (run)     #
 ##############################

my $maintainer = "dl1\@sanger.ac.uk kj2\@sanger.ac.uk krb\@sanger.ac.uk";
my $rundate = `date +%y%m%d`; chomp $rundate;
my $runtime = `date +%H:%M:%S`; chomp $runtime;
my $cvs_version = &get_cvs_version($0);


 ##############################
 # deal with command line     #
 ##############################

GetOptions (
            "source=s"       => \$sourcedir,
            "target=s"       => \$targetdir,
	    "debug"          => \$debug,
	    "clean"          => \$clean,
);

 ##############################
 # default values             # 
 ##############################

$sourcedir="/wormsrv2/autoace" if ($sourcedir eq "");
$targetdir="/nfs/disk100/wormpub/private_ftp" if ($targetdir eq "");

 ##############################
 # get release versions       #
 ##############################

if ($WS_release eq "") {
  $WS_release = &get_wormbase_version;
  $WP_release = &get_wormpep_version;
}
 ###############################
 # get date & time             #
 ###############################

$date = `date +%y%m%d`; chomp $date;
$time = `date +%H:%M:%S`; chomp $time;

#################################################################################
# Main Loop                                                                     #
#################################################################################

my $logfile = "/wormsrv2/logs/make_FTP_wormbase.WS${WS_release}.$$";
open (LOG,">$logfile");
LOG->autoflush();

if ($debug) {
    print LOG "# make_FTP_wormbase\n";
    print LOG "# version          : $cvs_version\n";
    print LOG "# run details      : $date $time\n#\n";

    print LOG "# Source directory : $sourcedir \n";
    print LOG "# Target directory : $targetdir\n";
    print LOG "# WS release No.   : WS$WS_release\n";
    print LOG "# wormpep release  : wormpep$WP_release\n\n";
}

 ##################################################
 # make a new directory for the WS release        #
 ##################################################

system "mkdir $targetdir/WS$WS_release" unless -e "$targetdir/WS$WS_release";
&error(2) unless -e "$targetdir/WS$WS_release";
print LOG "make a new WS release directory : '$targetdir/WS$WS_release'\n" if ($debug);

 ##################################################
 # make the tar file for the chromosomes          #
 ##################################################

system "tar -cf $targetdir/WS$WS_release/chromosomes.WS$WS_release.tar $sourcedir/CHROMOSOMES/";
#system "gzip $targetdir/WS$WS_release/chromosomes.WS$WS_release.tar";
# 001208 : dl  : Removed gzip stage as there is no point. Files are already gzip in the directory

print LOG "tar the CHROMOSOMES directory .... and move\n" if ($debug);
 
 ##################################################
 # copy the WS release files across               #
 # and check on the size                          #
 # The FTP disk tends to be unstable              #
 ##################################################

opendir (SOURCE,"$sourcedir/release") or die ("Could not open directory $sourcedir/release");
while (defined($filename = readdir(SOURCE))) {
    if (($filename eq ".")||($filename eq "..")) { next;}
    system "cp $sourcedir/release/$filename $targetdir/WS$WS_release/$filename";
    $O_SIZE = (stat("$sourcedir/release/$filename"))[7];
    $N_SIZE = (stat("$targetdir/WS$WS_release/$filename"))[7];
    if ($O_SIZE != $N_SIZE) {
	print LOG "*Error - file $filename not transferred regularly - please check\n";
	die();
    } else {
	print LOG "Copied filename: $filename SRC: $O_SIZE TGT: $N_SIZE\n" if ($debug);
    }
}
closedir SOURCE;
print LOG "copied the release directory to FTP site\n" if ($debug);

 ##################################################
 # copy the models.wrm file across                #
 ##################################################

system "cp $sourcedir/wspec/models.wrm $targetdir/WS$WS_release/";
print LOG "copied the models.wrm file to FTP site\n" if ($debug);

 ##################################################
 # tar and move the wormpep release               #
 ##################################################

system "/nfs/disk100/wormpub/analysis/scripts/tar_wormpep $WP_release ";
system "mv /wormsrv2/WORMPEP/wormpep${WP_release}/wormpep${WP_release}.tar.gz $targetdir/WS$WS_release/";
print LOG "tarred and gzipped the Wormpep release .... and moved\n" if ($debug);

 ##################################################
 # delete symbolic link and make the new one      #
 ##################################################

system "rm -f $targetdir/current_database";
system "cd $targetdir; ln -s WS$WS_release current_database";
print LOG "delete the old sym_link and create the new one\n" if ($debug);

 ##################################################
 # commit this release for upgrade of AceBrowser  #
 # This must be the final step - ag3              #
 ##################################################

system "touch $sourcedir/OK_TO_COPY";
print LOG "made 'OK_TO_COPY' flag in : '$sourcedir'\n" if ($debug);

 ##################################################
 # delete the old WS release version              #
 ##################################################

if ($clean) {
    $WS_release--;
    $WS_release--;
    system "/bin/rm -rf $targetdir/$old_release";
    print LOG "delete the old WS release version (WS$WS_release) from the FTP site\n" if ($debug);
    $WS_release++;
    $WS_release++;
}

exit (0);

#################################################################################
# Subroutines                                                                   #
#################################################################################

sub usage {
    print "make_FTP_wormbase\n";
    print "Usage : make_FTP_wormbase [-options]\n";
    print " [-source <path>]  : source directory from which to copy database release\n";
    print "                   : default: /wormsrv2/autoace\n";
    print " [-target <path>]  : target directory on the FTP site to place release\n";
    print "                   : default: /nfs/disk100/wormpub/private_ftp\n";  
    print " [-debug]          : verbose mode\n\n";
    exit(0);
}

sub error {
    my $error = shift;
    exit (1);
}


