#! /bin/csh 
# parbln made from parblx - to run blastn against embl in parallel on
# the alliant
# the output and error log files are named after the testsequence

setenv BLASTDB /pubseq/pubseq/seqlibs/blast-db/
setenv BLASTPAM /pubseq/pubseq/outhouse/blast/bin/
set local_blast = /pubseq/pubseq/outhouse/blast_local
set database = embl

switch (`hostname`)
  case "al": 
    breaksw
  default:
    echo 'parbln can only be run on the alliant'
    exit 1
endsw

switch ($#argv)
  case "1": 
	breaksw
  default: 
	echo 'Usage: parbln COSMID' ; 
	echo '  you should be in the directory containing COSMID.seq'
	exit 2
endsw

set seqfile = ${1}.seq

if (! -e $seqfile) then
  echo "Sequence file $seqfile does not exist"
  exit
endif

if (! -d blast) then
  echo "making blast subdirectory"
  mkdir blast
  cp $seqfile blast/${1}
endif

cd blast

echo "Sequence file: $1   Database: $database"

echo "Blastn log for sequence ${1} - database $database" >! ${1}.logn
echo "Started at" `date` >> ${1}.logn

$local_blast/blastsplit ${1}		# split up the file into format ${1}.<n>
#now run blast on each split piece

foreach i (0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40)
  set filename = ${1}.$i
  if (-e $filename ) then
    echo "Processing sequence ${1}.$i"
    echo "Processing sequence ${1}.$i" >> ${1}.logn
( /pubseq/pubseq/outhouse/blast/bin/blastn $database $filename >! $filename.bl ) >>&! ${1}.logn &
  endif
end

echo "When all the blastn jobs have finished then run parblnclean"
echo "To check whether jobs are still running, type parbltest"
exit
