#!/usr/local/bin/perl
#
# autoace_minder
# v 0.1
#
# dl
#
# Usage : autoace_minder [-options] <release_number>
#
# v0.1
# 001006 ag3 : fixed variable WS_version
# 000926 dl : PP version

use Getopt::Std;

#################################################################################
# Initialise variables                                                          #
#################################################################################

$|=1;

$opt_a="";   # Full release (does all the following)
$opt_w="";   # Write .acefiles
$opt_b="";   # Build autoace 
$opt_1="";   # Build autoace : DB only
$opt_2="";   # Build autoace : CHROMOSOMES directory
$opt_3="";   # Build autoace : Release directory
$opt_c="";   # Check DB consistency
$opt_p="";   # Build wormpep
$opt_f="";   # Wormbase release to FTP site
$opt_z="";   # Public release to FTP site
$opt_d="";   # Verbose debug mode
$opt_h="";   # Help/Usage page

getopts ('awbchpfzdrg123');
$WS_version = shift;
&usage unless ($WS_version);
$WP_version = $WS_version+10;

$old_db = WS . ($WS_version-1);
if ($opt_h) {
    &usage;
}

$scriptdir = glob "~wormpub/analysis/scripts" ;

$dat = `date +%y%m%d`; 
chomp $dat;
$mytime = `date +%H:%M:%S`;
chomp $mytime;


sub usage {
    print "autoace_minder v0.1\n\n";
    print "Usage : autoace_minder [-options] <version_number>\n";
    print "  -a : Full WS release (executes all of the following)\n";
    print "  -w : Write .acefiles from WormBase copies of the databases\n";
    print "  -b : Build autoace\n";
    print "  -1 : Build autoace : Database only\n";
    print "  -2 : Build autoace : Dump DNA & GFF\n";
    print "  -3 : Build autoace : release directory\n";
    print "  -c : Check DB consistency and diffs from previous version\n";
    print "  -p : Build wormpep database\n";
    print "  -f : Move WS release to the ftp-wormbase site (WormBase private release)\n";
    print "  -z : Move WS release to the external FTP site (Full public release)\n";
    print "  -d : Verbose/Debug mode\n";
    print "\n";
    exit (0);
}

# if command_line option is 'all' then set all flags

if ($opt_a) {
    $opt_w = 1;
    $opt_b = 1;
    $opt_c = 1;
    $opt_p = 1;
}


if ($opt_d) {
    print "\nautoace_minder v0.1\n\n";     
    print "WormBase version : WS${WS_version}\n";
    print "Wormpep version  : wormpep${WP_version}\n\n";
    print "run details      : $dat $mytime\n";
    print "  -a : Full WS release (executes all of the following -wbcp)\n" if ($opt_a);
    print "  -w : Write .acefiles from WormBase copies of the databases\n" if ($opt_w);
    print "  -b : Build autoace\n" if ($opt_b);
    print "  -1 : Build autoace : DB only\n" if ($opt_1);
    print "  -2 : Build autoace : DNA/GFF data\n" if ($opt_2);
    print "  -3 : Build autoace : Release directory\n" if ($opt_3);
    print "  -c : Check DB consistency and diffs from previous version\n" if ($opt_c);
    print "  -p : Build wormpep database\n" if ($opt_p);
    print "  -f : Move WS release to the ftp-wormbase site (WormBase private release)\n" if ($opt_f);
    print "  -z : Move WS release to the external FTP site (Full public release)\n" if ($opt_z);
    print "  -d : Verbose/Debug mode\n" if ($opt_d);
    print "\n\n";
}

#################################################################################
# Main Loop                                                                     #
#################################################################################

&make_acefiles      if ($opt_w);
&make_autoace       if ($opt_b);
&make_DB            if ($opt_1);
&make_DNA_GFF       if ($opt_2);
&make_release       if ($opt_3);
&check_release      if ($opt_c);
&make_wormpep       if ($opt_p);
&make_FTP_wormbase  if ($opt_f);
&make_anonymous_FTP if ($opt_z);


exit(0);

#################################################################################
# Subroutines                                                                   #
#################################################################################


#################################################################################
# make_acefiles                                                                 #
#################################################################################

sub make_acefiles {
    
    system ("$scriptdir/make_acefiles -nep");
    print " Write acefiles to disk : 'make_acefiles -nep'\n" if ($opt_d);
}

#################################################################################
# make_autoace                                                                  #
#################################################################################

sub make_autoace {
    
    system ("$scriptdir/make_autoace -p /wormsrv2/autoace -rdc");
    print " Build full autoace (database/CHROMOSOMES/release) : 'make_autoace -p /wormsrv2/autoace -rdc'\n" if ($opt_d);
}

sub make_DB {
    
    system ("$scriptdir/make_autoace -p /wormsrv2/autoace -r");
    print " Build autoace (database) : 'make_autoace -p /wormsrv2/autoace -r'\n" if ($opt_d);
}
sub make_DNA_GFF {
    
    system ("$scriptdir/make_autoace -p /wormsrv2/autoace -c");
    print " Build autoace (CHROMOSOMES) : 'make_autoace -p /wormsrv2/autoace -c'\n" if ($opt_d);
}
sub make_release {
    
    system ("$scriptdir/make_autoace -p /wormsrv2/autoace -d");
    print " Build autoace (release) : 'make_autoace -p /wormsrv2/autoace -d'\n" if ($opt_d);
}

#################################################################################
# check_release                                                                 #
#################################################################################

sub check_release {
    
    system ("$scriptdir/test_make_autoace -n /wormsrv2/autoace -o /wormsrv2/$olddb -cd");
    print " Test database build : 'test_make_autoace -n /wormsrv2/autoace -o /wormsrv2/$olddb -cd'\n" if ($opt_c);
}

#################################################################################
# make_wormpep                                                                  #
#################################################################################

sub make_wormpep {
    system ("$scriptdir/make_wormpep -r $WP_version");
    print " Build wormpep release : 'make_wormpep -r $WP_version'\n" if ($opt_d);
}

#################################################################################
# make_FTP_wormbase                                                             #
#################################################################################

sub make_FTP_wormbase {
#    system ("$scriptdir/make_FTP_wormbase -source /wormsrv2/autoace -target /nfs/private-ftp/ftp-wormbase/pub -WS_version $WS_version -WP_version $WP_version");
#    print " Move version to ftp-wormbase : 'make_FTP_wormbase -source /wormsrv2/autoace -target /nfs/private-ftp/ftp-wormbase/pub -WS_release $WS_version -WP_release $WP_version\n" if ($opt_d);

    system ("$scriptdir/make_FTP_wormbase -debug");
    print " Move version to ftp-wormbase : 'make_FTP_wormbase -debug\n" if ($opt_d);
}

#################################################################################
# make_anonymous_FTP
#################################################################################

sub make_anonymous_FTP {



}


###############################
# Prints help and disappears
#
sub usage {
    exec ('perldoc',$0);

    print "autoace_minder v0.1\n\n";
    print "Usage : autoace_minder [-options] <version_number>\n";
    print "  -a : Full WS release (executes all of the following)\n";
    print "  -w : Write .acefiles from WormBase copies of the databases\n";
    print "  -b : Build autoace\n";
    print "  -1 : Build autoace : Database only\n";
    print "  -2 : Build autoace : Dump DNA & GFF\n";
    print "  -3 : Build autoace : release directory\n";
    print "  -c : Check DB consistency and diffs from previous version\n";
    print "  -p : Build wormpep database\n";
    print "  -f : Move WS release to the ftp-wormbase site (WormBase private release)\n";
    print "  -z : Move WS release to the external FTP site (Full public release)\n";
    print "  -d : Verbose/Debug mode\n";
    print "\n";
    exit (0);
}

__END__

=pod

=head2   NAME - autoace_minder

=head1 USAGE

=over 4

=item autoace_minder [-options] <version_number>

=back

autoace_minder is a wrapper to drive the various scripts utilised in the
build of a C.elegans WS database release.

autoace_minder mandatory arguments:

=over 4

=item <version_number>,  release number (e.g. 16)

=back

autoace_minder OPTIONAL arguments:

=over 4

=item -a, Full WS release (executes all of the following)

=item -w, Write .acefiles from WormBase copies of the databases

=item -b, Build autoace

=item -1, Build autoace : Database only

=item -2, Build autoace : Dump DNA & GFF

=item -3, Build autoace : release directory

=item -c, Check DB consistency and diffs from previous version

=item -p, Build wormpep database

=item -f, Move WS release to the ftp-wormbase site (WormBase private release)

=item -z, Move WS release to the external FTP site (Full public release)

=item -d, Verbose/Debug mode

=back

=cut
