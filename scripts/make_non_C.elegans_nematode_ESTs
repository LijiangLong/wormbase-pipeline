#!/usr/local/bin/perl5.6.0
#
# make_non_C.elegans_nematode_ESTs
#
# Script to pull out all the non-celegans but nematode  ESTs 
#
# dl
#
# Last updated by: $Author: dl1 $                      
# Last updated on: $Date: 2003-01-27 11:13:44 $        

use strict;
use Getopt::Long;

$|=1;

 ##############################
 # command-line options       #
 ##############################

my $help;       # Help perdoc
my $debug;      # Debug mode, verbose output to dl1 only

GetOptions (
            "debug"     => \$debug,
            "help"      => \$help,
            );

# help page
&usage("Help") if ($help);

 ##############################
 # Paths etc                  #
 ##############################

my $fasta_file = "/nfs/disk100/wormpub/analysis/ESTs/non_C.elegans_nematode_ESTs";
my $ftp_file   = "/nfs/disk69/ftp/pub/wormbase/sequences/ESTS/non_C.elegans_nematode_ESTs";

# remove old file
system ("/bin/rm -f $fasta_file");

# open filehandles for output files 
open (OUTPUT_fasta, ">>$fasta_file");
open (OUTPUT_ace,   ">>${fasta_file}.ace");

# getz query for nematode EST accessions

my $acc     = "";  # EMBL accession number
my $id      = "";  # EMBL ID
my $sv      = "";  # EMBL sequence version
my $org     = "";  # EMBL species
my $def     = "";  # EMBL description
my $protid  = "";  # EMBL Protein_ID
my $protver = "";  # EMBL Protein_ID version


my @species_list = (
		    'Ancylostoma caninum',
		    'Ancylostoma ceylanicum',
		    'Angiostrongylus cantonensis',
		    'Ascaris lumbricoides',
		    'Ascaris suum',
		    'Brugia malayi',
		    'Brugia pahangi',
		    'Caenorhabditis briggsae',
		    'Caenorhabditis marpasi',
		    'Caenorhabditis vulgarensis',
		    'Dictyocaulus viviparus',
		    'Dirofilaria immitis',
		    'Globodera mexicana',
		    'Globodera pallida',
		    'Globodera rostochiensis',
		    'Haemonchus contortus',
		    'Heterodera glycines',
		    'Heterodera schachtii',
		    'Litomosoides sigmodontis',
		    'Loa loa',
		    'Meloidogyne arenaria',
		    'Meloidogyne incognita',
		    'Meloidogyne hapla',
		    'Meloidogyne javanica',
		    'Necator americanus',
		    'Nippostrongylus brasiliensis',
		    'Oesophagostomum dentatum',
		    'Onchocerca ochengi',
		    'Onchocerca volvulus',
		    'Ostertagia ostertagi',
		    'Parastrongyloides trichosuri',
		    'Pratylenchus penetrans',	
		    'Pristionchus pacificus',
		    'Steinernema feltiae',
		    'Strongyloides ratti',
		    'Strongyloides stercoralis',
		    'Teladorsagia circumcincta',
		    'Toxocara canis',
		    'Trichinella spiralis',
		    'Trichostrongylus vitrinus',
		    'Trichuris muris',
		    'Wuchereria bancrofti',
		    'Zeldia punctata'
		    );

foreach my $species (@species_list) {

    my $species_count = 0;

    open (SEQUENCES, "/usr/local/pubseq/bin/getzc -e \'([embl-org:$species*]) \& ([embl-key:est])' |") ;
    while (<SEQUENCES>) {
	chomp;
	
	if (/^\s/) {
	    s/\s+//g;
	    s/\d+//g;
	    print OUTPUT_fasta "$_\n";
	    print OUTPUT_ace   "$_\n";
	}
	
	if (/^ID\s+(\S+)/)                         {$id  = $1;}
	if (/^SV\s+(\S+)\.(\d+)/)                  {$acc = $1; $sv = $2;}
	if (/^DE\s+(.+)/)                          {$def = $def." ".$1;}
	if (/^SQ/) {
	    print OUTPUT_fasta ">$acc $id $def\n";
	    print OUTPUT_ace   "\nSequence : \"$acc\"\nDatabase EMBL $id $acc $sv\n";
	    print OUTPUT_ace   "Species \"$species\"\n";
	    print OUTPUT_ace   "Title \"$def\"\nMethod EST_nematode\n";
	    print OUTPUT_ace   "\nDNA \"$acc\"\n";
	 
	    $species_count++;
	    # reset vars
	    $def = ""; $id = ""; $acc = ""; $sv = ""; $protid = ""; $protver ="";
	}
    }    
    
    close SEQUENCES;

    print "// Parsed $species_count entries for $species\n";

}
    

# close filehandles
close OUTPUT_fasta;
close OUTPUT_ace;


# pressdb fasta database
#system ("/usr/local/pubseq/bin/pressdb $fasta_file > /dev/null");

# clean FTP copy and transfer new ones
#system ("/bin/rm -f ${ftp_file}.gz");
#system ("cp $fasta_file $ftp_file");
#system ("/bin/gzip $ftp_file");

exit(0);

#######################################################################
# Help and error trap outputs                                         #
#######################################################################
 
sub usage {
    my $error = shift;
    if ($error eq "Help") {
        # Normal help menu
        system ('perldoc',$0);
        exit (0);
    }
}


__END__

=pod

=head2   NAME - make_non_C.elegans_nematode_ESTs

=head1 USAGE

=over 4

=item make_non_C.elegans_nematode_ESTs [-options]

=back

make_non_C.elegans_nematode_ESTs is a wrapper around a getz
call to make a fasta file for all non-elegans nematode ESTs in 
the EMBL database. The script produces two files:

fasta file for BLAT similarity mapping

ace file for loading data into ACEDB

make_non_C.elegans_nematode_ESTs MANDATORY arguments:

=over 4

=item none, 

=back

make_non_C.elegans_nematode_ESTs OPTIONAL arguments:

=over 4

=item -debug, verbose report (e-mails dl1 only)

=item -help, this help page

=back

make_non_C.elegans_nematode_ESTs DEFAULT behaviour:

make_non_C.elegans_nematode_ESTs will write the two 
data files into /nfs/disk100/wormpub/analysis/ESTs.

=head1 REQUIREMENTS

=back

=item none

=back

This script is called by the following scripts:

=over 4

=item none

=back

=head1 AUTHOR

=back

=item Dan Lawson (dl1@sanger.ac.uk)

=back

=cut
