#! /bin/csh 
# PARBLASTX  - to blast one query vs many small databases
# in parallell on the alliant.
# Modified from parblx by Erik Sonnhammer, 92-11-16
#
# arg1 = Database
# arg2 = Query Sequence
# the output and error log files are named after the testsequence

switch (`hostname`)
  case "al": 
    breaksw;
  default:
    echo 'parblx can only be run on the alliant';
    exit 1;
endsw

if ( $#argv != 2 ) then 
  echo "Usage: parblastp database query "; 
  exit 1;
endif

set database = $1;
set seqfile = $2;
set dbdir = /hgmp0/wormpub/BioSW/ncbi/dbal/par/
if ( -e $dbdir/size.$1 ) then
  set Z = `cat "$dbdir"size."$1"`
else
  echo 'Could not find file with Database Real size:'$dbdir'size.'$1
  exit 1;
endif

#setenv BLASTDB /pubseq/pubseq/seqlibs/blast-db/
setenv BLASTDB /hgmp0/wormpub/BioSW/ncbi/dbal/par/
setenv BLASTPAM /pubseq/pubseq/outhouse/blast/bin/
set local_blast = /pubseq/pubseq/outhouse/blast_local

if (! -e $seqfile) then
  echo "Query file $seqfile does not exist"
  exit;
endif

echo "Query file: $seqfile   Database: $database"

echo "Blastp log for sequence $seqfile - database $database" >! parblastp.log
echo "Started at" `date` >> parblastp.log

set i = 1;

while (i != 0)

  set db = $1$i;
  if (! -e $BLASTDB$db.bsq ) then
	@ i -= 1;
	echo "Started blastx on $i database-chunks";
	set i = 0;
	break;
  else
    ( blastx $db $2 H=0 V=0 Z=$Z X=20 S=60 E=10 >! $2.blast$i ) >>&! $2.log$i &
    echo $Z
    @ i += 1;
  endif
end

echo "When all the blastx jobs have finished, cat the .blast files and run exblastx"
echo "Or if you are running parblx, simply run parblxclean"
echo "To check whether jobs are still running, type parbltest"
exit
