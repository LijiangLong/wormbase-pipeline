#!/usr/local/bin/perl
###################################################
##                                               ##
## update_totals                                 ##
## v 0.1                                         ##
##                                               ##
## dl                                            ##
##                                               ##
## Usage : update_totals                         ##
##                                               ##
###################################################

###################################################
## v0.1                                          ##
## 001103 : dl  : PP version                     ##
##                                               ##
###################################################

#################################################################################
# variables                                                                     #
#################################################################################

$|=1;
require "/nfs/disk100/wormpub/analysis/scripts/babel.pl";
use Getopt::Std;

my $maintainer = "dl1\@sanger.ac.uk";
my $rundate = `date +%y%m%d`; chomp $rundate;
my $runtime = `date +%H:%M:%S`; chomp $runtime;
my $version = &get_script_version(update_totals);

my $cmid        = "/nfs/disk100/wormpub/analysis/cosmids/cmid";
my $unfincmid   = "/nfs/disk100/wormpub/analysis/Sequence_Databases/unfincmid";
my $composition = "/nfs/disk100/wormpub/bin.ALPHA/composition";
my $count_fin   = "/nfs/disk2/sign/orginfo/celegans.fin";
my $count_unfin = "/nfs/disk2/sign/orginfo/celegans.unfin";

 ##############################
 # command-line options       #
 ##############################

$opt_h = "";   # Help/Usage page
getopts ('h');
&usage if ($opt_h);

 ##############################
 # calculate finished total   #
 ##############################

open (FIN, "$composition $cmid |");
while (<FIN>) {
    ($fin = $1) if (/(\d+)\s+total$/);
}
close FIN;

 ##############################
 # calculate unfinished total #
 ##############################

open (UNFIN, "$composition $unfincmid |");
while (<UNFIN>) {
    ($unfin = $1) if (/(\d+)\s+total$/);
}
close UNFIN;

 ##############################
 # update celegans.fin        #
 ##############################

if (-e $count_fin) {
    unlink $count_fin;
    open (NEW_FIN, ">$count_fin");
    print NEW_FIN $fin;
    close NEW_FIN;
}

 ##############################
 # update celegans.unfin      #
 ##############################

if (-e $count_unfin) {
    unlink $count_unfin;
    open (NEW_UNFIN, ">$count_unfin");
    print NEW_UNFIN $unfin;
    close NEW_UNFIN;
}

 ##############################
 # mail $maintainer report    #
 ##############################

open (LOG,  "|/usr/bin/mailx -s \"WormBase Report: update_totals\" $maintainer ");
print LOG "# update_totals\n";
print LOG "# version         : $version\n";
print LOG "# run details     : $rundate $runtime\n";
print LOG "\n";
print LOG "Finished sequence   : $fin\n";
print LOG "Unfinished sequence : $unfin\n\n";
close LOG;

 ##############################
 # a extremidade              #
 ##############################

exit(0);


###############################
# Prints help and disappears
#
sub usage {
    exec ('perldoc',$0);
 
    print "kkk\n";
    exit (0);
}

__END__

=pod

=head2   NAME - update_totals

=head1 USAGE

=over 4

=item update_totals [-options]

=back

update_totals will calculate the lengths of the finished and unfinished fasta
databases and overwrite the text files used to produce the Sanger sequence
statistics pages (http://www.sanger.ac.uk/Info/Statistics/)

update_totals mandatory arguments:

=over 4

=item none

=back

update_totals OPTIONAL arguments:

=over 4

=item -h, Help

=back

=head1 CRON

=over 4

=item Yes, (Daily)

=back

=head1 INPUT

The following files are required for update_totals to work:

=over 4

=item /nfs/disk100/wormpub/analysis/Sequence_Databases/cmid

=item /nfs/disk100/wormpub/analysis/Sequence_Databases/unfincmid

=back

=head1 OUTPUT

The following files are produced by update_totals:

=over 4

=item /nfs/disk2/sign/orginfo/celegans.fin

=item /nfs/disk2/sign/orginfo/celegans.unfin

=back

=head1 REPORT LOGGING

The script writes a logfile which is mailed to the maintainer


=head1 AUTHOR

=over 4

=item Daniel Lawson (dl1@sanger.ac.uk)

=back

=head1 VERSIONS

=over 4

=item v0.1

=back

PP version

=cut




