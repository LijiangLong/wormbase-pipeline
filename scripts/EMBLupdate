#!/usr/local/bin/perl5.6.1 -w
#
# EMBLUpdate
#


# [010619 dl] Horrible hack for date stamp - needs rewriting !!!!
# [ag3 0006] Re-writing of the original Steve Jones script
#



# This program will:-
#	
#	1) Check to see if the new version is different to before
#
#	2) If different, will write the new version into the cosmid/embl
#	 e.g. ZK1058.951111.embl and symbolically link this to ZK1058.current.embl
#		 	
#       3) Copy the version to ~wormpub/analysis/TO_SUBMIT.  
#

#use strict;                                     
use lib "/wormsrv2/scripts/";                  
use Wormbase;
use Getopt::Long;

##############
# variables  #
##############

my $maintainers = "All";
my $rundate     = `date +%y%m%d`; chomp $rundate;
my $name;

# touch logfile for run details
$0 =~ m/\/*([^\/]+)$/; system ("touch /wormsrv2/logs/history/$1.`date +%y%m%d`");
my $logfile = "/wormsrv2/logs/$1.`date +%y%m%d`.$$";

my ( $first, $second ,$debug ,$help);
GetOptions (
	    "debug:s"   => \$debug,
	    "help"      => \$help,
           );

# help page
&usage("Help") if ($help);

# no debug name
&usage("Debug") if ((defined $debug) && ($debug eq ""));

# assign $maintainers if $debug set
($maintainers = $debug . '\@sanger.ac.uk') if ($debug);

# open logfile
system ("/bin/touch $logfile");
open (LOG,">>$logfile") or die ("Could not create logfile\n");

print LOG "EMBLupdate start at ",&runtime,"\n";


my ($sec,$min,$hour,$mday,$mon,$year);
($sec,$min,$hour,$mday,$mon,$year)=localtime(time);
$mon++;
if ($mon < 10) {$mon="0".$mon;}
if ($mday < 10) {$mday="0".$mday;}
$year = $year-100;

my $datestamp = "0" . $year . $mon . $mday;

if ($ARGV[0] eq "" ) {
my $HELP=<<END;
Usage: $0 embl_file from EMBLDump
END
    die ($HELP);
}
my( $cosmid, $cosnum);
while (<>) {

# if detect the beginning of an entry start a new file
 if (/^ID\s+CE(\S+)/) {
   $cosmid=$1;
   open(TEMP,">temp$$");
   $cosnum++;
 }

# for some clones with long names the clone name cannot be got from the ID
 if (/^DE.+cosmid\s+(\S+)$/) { $cosmid=$1; }

# printout the whole file
 print TEMP $_;

# if detect the end of an entry, close the temp file and begin
 if (/^\/\/$/) { 
    close TEMP;

#------------------------------------
# Get the current date for the cosmid
#

 open(CURRENT, "grep ^$cosmid\/  /nfs/disk100/wormpub/analysis/cosmids/current.versions  |"); 
 while (<CURRENT>) {
    if (/^\S+\/(\d+)/) { 
	$date=$1; 
    } else  { 
	print "** WARNING - NO CURRENT VERSIONS ENTRY FOR $cosmid\n"; 
	next;
    }
 }
close CURRENT;

#------------------------------------------------------------------------
# If there never has been a cosmid entry so far then may wish to make one
#
	       
 if (!-e "/nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.embl") {
     print "This cosmid has not been submitted before\n";
     print "Shall I make a $cosmid.embl file and make this the $cosmid.current.file and submit? (y or n)\n";
     $answer=<STDIN>;
     if ($answer eq "y\n") {
	 system "cp temp$$ /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.embl";
	 system "ln -s /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.embl /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.current.embl";
	 system "cp temp$$ /nfs/disk100/wormpub/analysis/TO_SUBMIT/$cosmid.$datestamp.embl";	 } else {
	 print "** WARNING - COSMID $cosmid DOES NOT HAVE A $cosmid.embl FILE AND HAS NOT BEEN SUBMITTED\n";
	 next;
     }
 }


#------------------------------------------------------------------
# Is there a current.embl file for this sequence in the appropriate 
# place - if not quit now and sort this out 	
#

 if (-e "/nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.current.embl") 
 { 
     print "Current file for $cosmid found (number $cosnum)\n";
 } else {
     print "NO CURRENT FILE FOR COSMID $cosmid\n";
     print "Program has stopped. Cosmids which need resubmission up until now have been placed\n"; 
     print "in ~wormpub/analysis/TO_SUBMIT\n"; 
     print "You may need to just run make_current.embl to sort this out\n";
     unlink "temp$$";
     exit;
 }


#------------------------------------------------
# Is this different from the current.embl version 
#

 $compare=&detectdifference($cosmid,$date);
 if ($compare==1) {print "$cosmid differs\n";} 

#--------------------------------------------------------------------
# If there is a difference then copy the temp file to the approp. dir
# and make a symbolic link to cosmid.current.embl
# Report the change and place in TO_SUBMIT directory. 
#

 if ($compare==1) {
   system "cp temp$$ /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.$datestamp.embl";
   system "ln -fs /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.$datestamp.embl /nfs/disk100/wormpub/analysis/cosmids/$cosmid/$date/embl/$cosmid.current.embl";
   system "\mv temp$$ /nfs/disk100/wormpub/analysis/TO_SUBMIT/$cosmid.$datestamp.embl";
   print "$cosmid should be resubmitted and is in TO_SUBMIT.\n";
 } else {
   print "Cosmid $cosmid is up to date\n";
   unlink "temp$$";
 } 
    next;
  }

}
print LOG "$0 finished at ",&runtime, "\n";
close LOG;
&mail_maintainer("EMBLupdate",$maintainers,"$logfile");

exit(0);

#----------------------------
# Detect whether the new file 
# is different from the old one
# using diff
#
sub detectdifference {		 
    local($difference);
    open(diffout,"diff temp$$ /nfs/disk100/wormpub/analysis/cosmids/$_[0]/$_[1]/embl/$cosmid.current.embl |");
    $difference=0;
    while (<diffout>) {
	if ($_ ne "") {
	    $difference=1;
	}
    }
    return($difference);					   
}

sub usage {
     my $error = shift;

     if ($error eq "Help") {
         # Normal help menu
         system ('perldoc',$0);
         exit (0);
     }
     elsif ($error eq "Debug") {
         # No debug bod named
         print "You haven't supplied your name\nI won't run in debug mode
         until i know who you are\n";
        exit (0);
    }
}










