# this Rakefile is to run the compara pipeline
# including dumping and packaging a tarball of the databases
# it requires rake to run

# major advantage is the shared configuration file across quite
# a few PERL scripts and the management through rake
# 


require 'yaml'
require 'fileutils'

tmp_place = '/lustre/scratch1/ensembl/wormpipe/compara_build'

# check to see if the old build was cleaned
# will raise an error if not
desc 'check if the directories are cleaned up'
task :check_clean do
	files=Dir.glob('/lustre/scratch1/ensembl/wormpipe/compara/Caenorhabditis*')
	raise("the last run was not cleaned up! delete:\n#{files.join("\n")}") unless files.size == 0
end

# that is the basic environment setup task
# on which most other tasks depend on
desc 'setup environment variables'
task :env_setup do
	old=ENV['PERL5LIB']
	additional='.:/software/worm/lib/perl5:/software/worm/lib:/software/worm/ensembl/ensembl-compara/modules:/software/worm/ensembl/ensembl-analysis/modules:/software/worm/ensembl/ensembl-pipeline/scripts/DataConversion/wormbase:/software/worm/ensembl/ensembl-hive/modules:/software/worm/lib/bioperl-run:/software/worm/ensembl/ensembl/modules:/software/worm/ensembl/ensembl-pipeline/modules:/software/worm/lib/bioperl-live:'
	ENV['PERL5LIB']=additional+old
	ENV['LAGAN_DIR']='/usr/local/ensembl/lagan-1.21'
	ENV['ZOE']='/usr/local/ensembl/Zoe'
end

# updates the C.elegans assembly version to the current build
desc 'update the configuration file'
task :update_conf do
        yml_file='etc/ensembl_lite.conf'
	yml=YAML::load_file(yml_file)
	yml['elegans']['version']="WS#{Dir.glob("/nfs/disk100/wormpub/DATABASES/WS*").sort[-2].scan(/\d+/)[-1].to_i+1}"
	File.open(yml_file,'w') do |out|
		YAML.dump(yml,out)
	end
end

##############################
# setup of the core databases
#

# small shorthand
def build_db(db_name)
	sh "perl scripts/worm_lite.pl -species #{db_name} -setup -load_dna -load_gene"
end

desc 'build elegans database'
task :build_elegans => [:env_setup] do
	build_db(:elegans)
end

desc 'build briggsae database'
task :build_briggsae => [:env_setup] do
	build_db(:briggsae)
end

desc 'build brenneri database'
task :build_brenneri => [:env_setup] do
	build_db(:brenneri)
end

desc 'build remanei database'
task :build_remanei => [:env_setup] do
	build_db(:remanei)
end

desc 'build brugia database'
task :build_brugia => [:env_setup] do
	build_db(:brugia)
end

##############################################
# setup of the compara databases
# - note the hardcoded paths to the sql-files
#

desc 'build homology database'
task :build_homology => [:env_setup] do
	conf='etc/my_compara.conf'
	yml=YAML::load_file('etc/ensembl_lite.conf')
        db=yml['elegans']['database']

        sh "mysql -h #{db['host']} -P#{db['port']} -u #{db['user']} -p#{db['password']} -e 'DROP DATABASE IF EXISTS worm_compara;CREATE DATABASE worm_compara;'"
	`cat /software/worm/ensembl/ensembl-hive/sql/tables.sql /software/worm/ensembl/ensembl-compara/sql/table.sql /software/worm/ensembl/ensembl-compara/sql/pipeline-tables.sql |mysql -h #{db['host']} -u #{db['user']} -p#{db['password']} worm_compara`
	sh "/software/worm/ensembl/ensembl-compara/scripts/pipeline/comparaLoadGenomes.pl -conf #{conf}"
	sh "/software/worm/ensembl/ensembl-compara/scripts/pipeline/loadHomologySystem.pl -conf #{conf}"
	sh "bzcat /nfs/acari/wormpipe/ensembl/ensembl-compara/scripts/pipeline/ncbi_taxon.sql.bz2 |mysql -h #{db['host']} -u #{db['user']} -p#{db['password']} worm_compara"
end

desc 'build PECAN database'
task :build_pecan => [:env_setup] do
        conf='etc/pecan.conf'
	yml=YAML::load_file('etc/ensembl_lite.conf')
        db=yml['elegans']['database']

	sh "mysql -h #{db['host']} -P#{db['port']} -u #{db['user']} -p#{db['password']} -e 'DROP DATABASE IF EXISTS worm_compara_lagan;CREATE DATABASE worm_compara_lagan;'"
	sh "cat /software/worm/ensembl/ensembl-hive/sql/tables.sql /software/worm/ensembl/ensembl-compara/sql/table.sql /software/worm/ensembl/ensembl-compara/sql/pipeline-tables.sql |mysql -h #{db['host']} -u #{db['user']} -p#{db['password']} worm_compara_lagan"
	sh "/software/worm/ensembl/ensembl-compara/scripts/pipeline/comparaLoadGenomes.pl -conf #{conf}"
	sh "/software/worm/ensembl/ensembl-compara/scripts/pipeline/loadMultipleAlignerSystem.pl -conf #{conf}"
end

##########################
# run the beehive
#

# hive shorthand
def run_beehive(db_name)
	yml=YAML::load_file('etc/ensembl_lite.conf')
        db=yml['elegans']['database'] # lets default to elegans for dbconnection details

	sh %Q(beekeeper.pl -url mysql://#{db['user']}:#{db['password']}@#{db['host']}:#{db['port']}/#{db_name} -loop -lsf_option '-R"rusage[myia64b=10:duration=10:decay=1] select[myia64b<400]" -W 120')
end


desc 'run homology beehive'
task :run_homology => [:env_setup] do
	run_beehive('worm_compara')
end

desc 'run pecan beehive'
task :run_pecan => [:env_setup] do
	run_beehive('worm_compara_lagan')
end


#####################################
# dump data and copy it around
#

desc 'dump homology ace file'
task :dump_homology => [:env_setup] do
	sh "perl scripts/get_all_elegans_orthologues.pl > #{tmp_place}/compara.ace"
end

desc 'dump pecan files'
task :dump_pecan => [:env_setup] do
	FileUtils.mkdir_p("#{tmp_place}/compara")
 
 	ENV['ENSEMBL_REGISTRY'] = './etc/E_registry.pl'

	sh "perl scripts/getsynteny.pl > #{tmp_place}/compara/pecan.gff"   # dump gff

	['I','II','III','IV','V','X'].each {|c|
	   sh "perl scripts/dump_clustal.pl CHROMOSOME_#{c} > #{tmp_place}/compara/pecan_chromosome_#{c}.clw" # dump clustal
	}
end

desc "make a compara tarball"
task :dump_compara do
	conf=YAML.load_file('etc/ensembl_lite.conf')

	mysqldir=''
	dump_options='--add-drop-table -u wormro -a -h ia64b'

	to_dump =[ 'briggsae','elegans','remanei','brenneri','brugia']

	########### if needed, commment out the mysql dumping part #####
	FileUtils.mkdir_p("#{tmp_place}/compara")
	FileUtils.cd("#{tmp_place}/compara") do
		conf.each_key{|org|
			next unless to_dump.include?(org)
			db=conf[org]['database']
			file="#{db['dbname']}.sql"
			sh "#{mysqldir}mysqldump #{dump_options} -B #{db['dbname']} > #{file}"
		}
		sh "#{mysqldir}mysqldump #{dump_options} -B worm_compara > worm_compara.sql"
		sh "#{mysqldir}mysqldump #{dump_options} -B worm_compara_lagan > worm_compara_lagan.sql"
	end
	# # # # # # # # # # # # # # # #
	
	FileUtils.cd(tmp_place) do
		File.unlink("compara.tar.bz2") if File.exists?("compara.tar.bz2")
		sh "tar cvf compara.tar compara/*"
		sh "bzip2 -9 compara.tar"
		FileList['compara/*'].each{|f|File.unlink(f)}
	end
end

desc 'copy release files'
task :copy_release do
	target_dir='/nfs/disk100/wormpub/BUILD/autoace/'
	cp "#{tmp_place}/compara.ace","#{target_dir}acefiles/"
	cp "#{tmp_place}/compara.tar.bz2",target_dir
end



#################
# final cleanup
#

desc 'cleanup the compara work directories'
task :cleanup do
	sh 'rm -rf /lustre/scratch1/ensembl/wormpipe/compara/logs/*'      # remove the logs
	sh 'rm -f /lustre/scratch1/ensembl/wormpipe/compara/Caenorhabditis*' # remove the blast databases
	sh 'rm -f /lustre/work1/ensembl/wormpipe/compara/Caenorhabditis*' # remove the blast databases
	sh "rm -f #{tmp_place}/compara.ace" # remove the compara ace file
	sh "rm -rf #{tmp_place}/compara"    # remove the compara dump directory
end

desc 'build and setup all databases'
task :build => [:check_clean,:env_setup,:build_homology,:run_homology,:build_pecan,:run_pecan,:cleanup]

desc 'dump all databases into the various flatfiles'
task :dump => [:dump_homology,:dump_pecan,:dump_compara,:copy_release,:cleanup]

task :default => [:update_conf,:build,:dump]
