#!/usr/local/bin/perl 
#
# This is a wrapper for postwise
# It takes the name of a cosmid and then uses the homology  	
# information  stored for that cosmid an does consistency checking 
# with these homologies and then then checks to see as much as possible that the intron    	
# exon structure is correct for the exons. 		
#
# Steven Jones, Sanger Centre 1998.

require glob('~sjj/scripts/sanger.pl');

#make the exblx file 
$exblx=&make_exblx($ARGV[0]);
open(exblxfile,">tempexblx$$");
print exblxfile "$exblx";
close exblxfile;

#make the fasta file for the cosmid; 
$fasta=&fasta($ARGV[0]);
open(fastafile,">tempfasta$$");
print fastafile "$fasta";
close fastafile;


open(postwise,"postwise -ace -gene worm.gf tempfasta$$  tempexblx$$ |");
while(<postwise>) {print; if (/^subsequence\s+\S+\s+(\d+)\s+(\d+)$/) {
    $start=$1;$end=$2;
    if ($1 < $2) {$start=$1;$end=$2;$strand="+";}
	 else {$strand="-";}}
		 if (/^source_Exons\s+(\d+)\s+(\d+)/) { 
		     if ($strand eq "-") {$exonst=$start-$1+1;$exonend=$start-$2+1;}
		 
		     print "$start $end exon $exonst $exonend\n";
		 }
		   

}
								   
#################################################


sub make_exblx {
        @cosmidgenes=&get_genes($_[0]);
        local($exec);
        local($command);
	local($exblx);
        $exec=&tace;
        $ENV{'ACEDB'}="/nfs/disk100/wormpub/acedb/ace4/cam";     
        $command=<<EOF;
        find genome_sequence $_[0]
        show -a Pep_homol 
        quit
EOF
open(textace, "echo '$command' | $exec | ");
HOMOL:while (<textace>) {s/\"//g;
		if (/^Pep_homol\s+(\S+)\s+(\S+)\s+(\S+)\.\d+\s+(\S+)\s+(\S+)\s+(\S+)\s+(\S+)$/) {
		        foreach $gene (@cosmidgenes) {$wpgene="WP:".$gene;
						      if ($wpgene eq $1) {print STDERR "excluding $gene\n";next HOMOL;}}
			if ($4 < $5) {$exblx=$exblx."$3\t(+1)\t$4\t$5\t$6\t$7\t$1\n";} else 
			             {$exblx=$exblx."$3\t(-1)\t$4\t$5\t$6\t$7\t$1\n";}
		}
                 }
        close textace;     
	return $exblx;
 }

######################################################

sub get_genes {

    local(@array);
    local($exec);
    $exec="/nfs/disk100/wormpub/acedb/ace4/bin.ALPHA_4/giface";
    $ENV{'ACEDB'}="/nfs/disk100/wormpub/acedb/ace4/cam";
        $command=<<EOF;
        gif 
        sequence $_[0] 
        seqfeatures
EOF
    open(textace, "echo '$command' | $exec | ");
while (<textace>) {if (/Coding\s+sequence\s+\d+\s+\d+.+\s+(\S+)$/) {push (@array, $1);}
               }
return @array;
}

#######################################################


sub fasta {
	local (@sequence);
	local ($fasta);
	local ($count);
	@sequence=&celeseq($_[0]);
	$fasta=$fasta.">$_[0]\n";
	for ($i=0;$i<=$#sequence;$i++) {
	$count++;
	$fasta=$fasta.$sequence[$i];
	if ($count==80) {$fasta=$fasta."\n";$count=0;}
	}
	if ($count !=0) {$fasta=$fasta."\n";}
	return $fasta;
    }










