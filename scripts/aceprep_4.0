#!/usr/local/bin/perl
# Script for doing aceprep analysis of C.elegans comsids
# perl rewrite of sjj csh script ag3 052000

use Getopt::Std;
use IO::Handle;
use Cwd;

$|=1;

# Check correct architecture and arguments

$logfile = "analysis_logfile";
$blast_farm = "blast_farm";
getopts ('hc:u:123456789');
$def = ($opt_1||$opt_2||$opt_3||$opt_4||$opt_5||$opt_6||$opt_7||$opt_8||$opt_9);
$l1=length($def);
$lh=length($opt_h);
$lc=length($opt_c);
$lu=length($opt_u);
$cmid = $opt_c;
$user = $opt_u;
my $cwd = cwd;

if (($l1==0)||($lc==0)||($lu==0)) {
    $HELP=<<END;
Usage: $0 -c cosmid_file_name -u user_name [analysis_options]
mandatory analysis options are (one or more, eg -1245 ):

-1 => EST_genome
-2 => TblastX vs. C.elegans ESTs
-3 => Tblastx vs. Other nematode ESTs
-4 => BlastN vs. Tc1
-5 => Blastx vs. Swir
-6 => Prosite Search
-7 => Search Repeat Families
-8 => tRNA scan
-9 => GeneFinder

END
    print $HELP;
    exit 0;
}

$acefile = "$cmid"."_2".".ace";
$swir = "swir";
$dat = `date +%y%m%d`; 
chomp $dat;
$mytime = `date +%H:%M:%S`;
chomp $mytime;
$acedat = `date +20%y-%m-%d`;
chomp $acedat;

if (!-e "$cmid.seq") {
    print "You must be working in a directory containing $cmid.seq\n";
    exit 0;
}
if ( `uname` != IRIX && `uname` != OSF1 && `uname` != Linux) {
    print "You must run this script on an SGI or DEC machine\n";
    exit 0;
}

# Write details of this session to logfile
($opt_1) && push (@options,EST_Genome);
($opt_2) && push (@options,TblastX_Elegans);
($opt_3) && push (@options,TblastX_Nematode);
($opt_4) && push (@options,BlastN_Tc1);
($opt_5) && push (@options,Blastx_Swir);
($opt_6) && push (@options,Prosite_Search);
($opt_7) && push (@options,Repeat_Search);
($opt_8) && push (@options,tRNAScan_SE);
($opt_9) && push (@options,GeneFinder);

if (! -e "$logfile") { system ("touch $logfile") };
open (LOGFILE,">$logfile");
print LOGFILE "Script: NEW_ACEPREP\n";
print LOGFILE "Sequence: $cmid\n";
print LOGFILE "Started on: $dat\n";
print LOGFILE "Time: $mytime\n";
print LOGFILE "Run on machine: $ENV{HOST}\n";
print LOGFILE "Executed by: $user\n"; 
print LOGFILE "Process ID: $$\n";
print LOGFILE "Analysis options selected:\n";
foreach (@options) {
    print LOGFILE "- $_\n";
}
print LOGFILE "\n\n";
LOGFILE->autoflush();

# Make FastA format of the sequence

if (!-e "$cmid.fasta") {
 open (FASTAFILE,">$cmid.fasta\n");
 print FASTAFILE ">$cmid\n";
 close FASTAFILE;
 system ("cat $cmid.seq >> $cmid.fasta");
 print LOGFILE "Created $cmid.fasta\n";
} else {
 print LOGFILE "$cmid.fasta is already present .. skipping\n";
}
if (!-e "$acefile") {
 system ("touch $acefile");
} else {
 print LOGFILE "$acefile already present .. skipping\n";    
}
if (!-d "blast") {
 -d "blast" or system ("mkdir blast");
} else {
 print LOGFILE "blast subdirectory already present .. skipping\n"; 
}
if (!-d "embl") {
 -d "embl" or system ("mkdir embl");
} else {
 print LOGFILE "embl subdirectory already present .. skipping\n";
}

&AddAuthorInfo();
foreach (@options) {
    &$_();
}
&RmAssemblyTags();

close LOGFILE;
exit 0;

###############################################

# Add Author Info
#################

sub AddAuthorInfo {
    $date = &Date(" : Getting author name for $cmid\n"); 
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue = system ("get_author_ace $cwd/$cmid  > $acefile");
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date(" : Could not find a reference for the author\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    } else {
	$date = &Date(" : Added author reference to $acefile\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    }
}


# EST_GENOME
############

sub EST_Genome {
    $date = &Date (" : Running est_genome2ace against C.elegans ESTs\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue = system ("est_genome2ace -ci /nfs/disk100/wormpub/analysis/cdna/allcdna $cwd/$cmid.fasta >> $acefile");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date( " : est2genome failed with sysvalue $sysvalue\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    } else {
	$date = &Date (" : cDNA hits added to $acefile with exit status $sysvalue \n");
	print LOGFILE $date;
	LOGFILE->autoflush();
        &AceSpacer();
	return;
    }
}


# TBLASTX with C.ELEGANS ESTS
#############################

sub TblastX_Elegans {
    if ((!-e "blast/$cmid.cdna.tblastx")&&(!-e "blast/$cmid.cdna.tblastx.gz")) {
	$date = &Date (" : Running TblastX against C.elegans ESTs\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	$retvalue=system ("tblastx /nfs/disk100/wormpub/analysis/cdna/allcdna $cwd/$cmid.fasta  > blast/$cmid.cdna.tblastx");
	chomp $retvalue;
	$sysvalue = 0xffff & $retvalue;
	if ($sysvalue != 0) {
	   $date = &Date (" : TblastX vs. C.elegans ESTs failed with sysvalue $sysvalue\n");
	   print LOGFILE $date;
	   LOGFILE->autoflush();
	   return;
        } else {
	   $date = &Date (" : TblastX vs. C.elegans ESTs suceeded with sysvalue $sysvalue\n");
	   print LOGFILE $date;
	   LOGFILE->autoflush();
        }

    } else {
	$date = &Date (" : cDNAsearch skipped, tblastx file already exists\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    }

    $date = &Date(" : Adding cDNA hits to acefile\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue=system("/usr/local/pubseq/bin/MSPcrunch -4M blast/$cmid.cdna.tblastx \| sed \'s\/TBLASTX\/TBLASTX_EST_elegans\/\' >> $acefile");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date(" : MSPcrunch failed with exit value $acefile\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    } else {
	$date = &Date(" : MSPcrunch suceeded with exit value $sysvalue\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
    }
    system ("gzip blast/$cmid.cdna.tblastx");
}


# TBLASTX with OTHER NEMATODE ESTS
##################################

sub TblastX_Nematode {
    if (!-e "blast/$cmid.ests.tblastx") {
	$date = &Date (" : Running tblastx versus non nematode ESTs\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
#	$retvalue = system ("bsub -I -q $blast_farm -R blast tblastx /nfs/disk100/wormpub/analysis/ESTs/non_C.elegans_nematode_ESTs  $cwd/$cmid.fasta > blast/$cmid.ests.tblastx  ");
	$retvalue = system ("tblastx /nfs/disk100/wormpub/analysis/ESTs/non_C.elegans_nematode_ESTs  $cwd/$cmid.fasta > blast/$cmid.ests.tblastx  ");
	chomp $retvalue;
	$sysvalue = 0xffff & $retvalue;
	if ($sysvalue != 0) {
	    $date = &Date (" : TblastX versus non-elegans nematode ESTs failed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	    return;
	} else {
	    $date = &Date (" : TblastX versus non-elegans nematode ESTs completed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	}
	if (-e "blast/$cmid.ests.exblx") { unlink "blast/$cmid.est.exblx" };
	$date = &Date (" : Converting blastfile file to ace format\n"); 
	print LOGFILE $date;
	LOGFILE->autoflush();
	$retvalue = system ("/usr/local/pubseq/bin/MSPcrunch -x blast/$cmid.ests.tblastx  \> blast/$cmid.est.exblx");
	chomp $retvalue;
	$sysvalue = 0xffff & $retvalue;
	if ($sysvalue != 0) {
	    $date = &Date (" : MSPcrunch failed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	    return;
	} else {
	    $date = &Date (" : MSPcrunch successful with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	}	
	$retvalue = system ("/nfs/disk100/wormpub/analysis/scripts/exblx2ace_4 $cmid DNA_homol DNA_homol TBLASTX_EST blast/$cmid.est.exblx >> $acefile ");
	chomp $retvalue;
	$sysvalue = 0xffff & $retvalue;
	if ($sysvalue != 0) {
	    $date = &Date (" : exblx2ace failed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	    &AceSpacer;
	    return;
	} else {
	    $date = &Date (" : exblx2ace successful with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	    &AceSpacer();
	    system ("/bin/gzip blast/$cmid.ests.tblastx");
	    return;
	}	
    } else {
	    $date = &Date (" : TblastX versus non-elegans nematode ESTs skipped, tblastx file already exists\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	    return;
    }
}


# BLASTN against TC1
####################

sub BlastN_Tc1 {
    $date=&Date(" : Running blastn against Tc1 database\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue=system("bsub -I -q local_blastq -R blast blastn /nfs/disk100/wormpub/analysis/tc1/PK.dna.fasta $cwd\/$cmid.fasta \| MSPcrunch -4 - \| sed \'s\/BLASTN\/BLASTN_TC1\/\' >>  $acefile");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
      $date = &Date(" : BlastN against TC1 failed with sysvalue $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      return;
    }  else {
      $date = &Date(" : Tc1 database hits added to $acefile\n"); 
      print LOGFILE $date;
      LOGFILE->autoflush();
      return;
    }
}


# BLASTX AGAINST SWIR
#####################

sub Blastx_Swir {
if ((!-e "blast/$cmid.$swir.gz") && (!-e "blast/$cmid.$swir")) {
    $date = &Date(" : Running blastx vs. Swir\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
if (-e "blast/$cmid.exblx") {
    unlink "blast/$cmid.exblx";
}
    $retvalue = system ("bsub -I -q $blast_farm -R blast blastx $swir $cwd\/$cmid.fasta B\=1000000 -span1  M\=BLOSUM62-12 V\=0 H\=0 \> blast/$cmid.$swir");  
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date(" : bsub failed with sysvalue $sysvalue\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
    }
    $date = &Date(" : Blastx vs. Swir run with exit value $sysvalue\n ");
    print LOGFILE "$date\n";
    LOGFILE->autoflush();
} else {
    $date = &Date(" : Blastx vs. Swir skipped, blastx file already exists\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    return;
}

if (-e "blast/$cmid.$swir.gz") { system ("gzip -d blast/$cmid.$swir.gz");};
    $date = &Date(" : Running MSPcrunch\n");
    print LOGFILE "$date\n";
    LOGFILE->autoflush();
    $retvalue = system ("/usr/local/pubseq/bin/MSPcrunch -x blast/$cmid.$swir \> blast/$cmid.exblx");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date(" : MSPcrunch failed with sysvalue $sysvalue\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
     } else {
	$date = &Date(" : MSPcrunch completed successfully with sysvalue $sysvalue\n");	 
	print LOGFILE $date;
	LOGFILE->autoflush();
     }
    $date = &Date(" : Adding blastx hits to ace file\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue = system ("/nfs/disk100/wormpub/analysis/scripts/exblx2ace_4 $cmid Pep_homol DNA_homol BLASTX  blast/$cmid.exblx >> $acefile");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
	$date = &Date(" : exbl2ace failed with exit status $sysvalue\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	return;
     } else {
	$date=&Date(" : Completed exblx2ace_4 with exit status $sysvalue \n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	system("gzip blast/$cmid.$swir");
	return;
    }
}


# Add prosite homology hits
###########################

sub Prosite_Search {
 if (!-d "prosite") { system("mkdir prosite");}
 $date = &Date (" : Adding Prosite hits to $acefile\n");
 $retvalue = system("/nfs/disk100/wormpub/analysis/scripts/prosite_homology_4 $cmid >> $acefile");
 chomp $retvalue;
 $sysvalue = 0xffff & $retvalue;
 if ($sysvalue != 0) {
     $date = &Date (" : prosite_homology_4 failed with exit status $sysvalue \n");
     print LOGFILE $date;
     LOGFILE->autoflush();
     &AceSpacer;
     return;
 } else {
     $date = &Date (" : Prosite hits added to $acefile with exit status $sysvalue\n");
     print LOGFILE $date;
     LOGFILE->autoflush();
     &AceSpacer();
     return;
 }	
}


# Search repeat families
########################

sub Repeat_Search {
    $date=&Date(" : Searching repeat families, adding to $acefile\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue = system ("/nfs/disk100/wormpub/analysis/scripts/Search_Repeat_Families $cmid.fasta /nfs/disk100/wormpub/analysis/Repeat_Families/Repeat_Families_lookup_table  >>  $acefile");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
      $date = &Date (" : Search Repeat families failed with exit status $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer;
      return;
    } else {
      $date = &Date (" : Search repeat Families suceeded with exit status $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer();
      return; 
 }
}


# Search for tRNAs
##################

sub tRNAScan_SE {
    $date=&Date(" : searching with tRNAscan-SE\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    $retvalue = system ("/usr/local/pubseq/bin/tRNAscan-SE -a -q $cmid.fasta \| perl -ne \'if (\/^Score\s+(\S+)\/) \{ print \"Method $cmid\n\";} s\/\^Score\/CDS_predicted_by\/;print;\' >> $acefile ");
    chomp $retvalue;
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
      $date = &Date (" : tRNAscan-SE failed with exit status=$status\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer();
      return;
  } else {
      $date = &Date (" : tRNAscan-SE suceeded with exit status $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer();
      return;
  }
}


# Run GeneFinder
################

sub GeneFinder {
    $date = &Date (" : Running GeneFinder\n");
    print LOGFILE $date;
    $result = system("/nfs/disk100/wormpub/BioSW/gf_980506/genefinder/bin/genefinder  -tablenamefile /nfs/disk100/wormpub/BioSW/gf_980506/nemtables/sanger.tablenamefile.cod -intronPenalty /nfs/disk100/wormpub/BioSW/gf_980506/nemtables/intron_penalty.lookup -exonPenalty /nfs/disk100/wormpub/BioSW/gf_980506/nemtables/exon_penalty.lookup $cmid.fasta | genefinder2ace  - $cmid >> $acefile");
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
      $date = &Date (" : GeneFinder failed with exit status $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer();
      return;
  } else {
      $date = &Date (" : GeneFinder ended successfully with exit status $sysvalue\n");
      print LOGFILE $date;
      LOGFILE->autoflush();
      &AceSpacer();
      return;
  }
}

# Remove assembly tags
######################

sub RmAssemblyTags {
    $result = system ("rmassemblytags $cmid >> $acefile");
    $sysvalue = 0xffff & $retvalue;
    if ($sysvalue != 0) {
    $date = &Date (" : Removal of assembly tags failed with exit value $sysvalue\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    &AceSpacer();
    return;
  } else {
    $date = &Date (" : Removal of assembly tags suceeded with exit value $sysvalue\n");
    print LOGFILE $date;
    LOGFILE->autoflush();
    &AceSpacer();
    return;
  }
}

# General mechanism for date
############################

sub Date {
    my $msg = shift;
    my $date = "";
    $date = `date +%H:%M:%S`;
    chomp $date;
    $date.=$msg;
    return $date;
}


# General mechanism for adding a spacer
# to Ace file
#######################################

sub AceSpacer {
    open (ACEFILE,">>$acefile");
    print ACEFILE "\n\n";
    close ACEFILE;
    return 1;
}


# TBLASTX WITH BRIGGSAE GENOMIC
###############################

sub TBlastX_Briggsae {
    if ((!-e "blast/$cmid.tblastx.allC.briggsae.gz") && (!-e "blast/$cmid.tblastx.allC.briggsae")){ 
	$date = &Date(" :  Running tblastx against C.briggsae genomic\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
	$retvalue = system ("bsub -I -q $blast_farm -R blast tblastx ~wormpub/BRIGGSAE/Sequence_databases/allbriggsae $cwd/$cmid.fasta -hspmax 1000 \> blast/$cmid.tblastx.allC.briggsae");
	$sysvalue = 0xffff & $retvalue;
	if ($sysvalue != 0) {
	    $date = &Date(" : TblastX against C.briggsae failed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
        } else {
	    $date = &Date(" : TblastX against C.briggsae completed with sysvalue $sysvalue\n");
	    print LOGFILE $date;
	    LOGFILE->autoflush();
	}
    } else { 
	$date = &Date(" : TblastX against C. briggsae skipped, tblastx file already exists\n");
	print LOGFILE $date;
	LOGFILE->autoflush();
    }
    if (-e "blast/$cmid.tblastx.allC.briggsae.gz") { 
	system ("gzip -d blast/$cmid.tblastx.allC.briggsae.gz");
    }
    open (ACEFILE,">$acefile");
    open (MSPCRUNCH,"MSPcrunch -4 blast/$cmid.tblastx.allC.briggsae \| sed \'s\/TBLASTX\/TBLASTX_C.briggsae\/\' | ");
    while (<MSPCRUNCH>) {
	print ACEFILE $_;
    }
    close MSPCRUNCH;
    close ACEFILE;
    $date = &Date(" : C. briggsae genomic tblastx hits added to $acefile with exit status $sysvalue\n");
    print LOGFILE "$date\n";
    LOGFILE->autoflush();
    system ("gzip blast/$cmid.tblastx.allC.briggsae");
}







